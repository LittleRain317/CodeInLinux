UMASK(2)                                              Linux Programmer's Manual                                             UMASK(2)

NNAAMMEE
       umask - set file mode creation mask

SSYYNNOOPPSSIISS
       ##iinncclluuddee <<ssyyss//ttyyppeess..hh>>
       ##iinncclluuddee <<ssyyss//ssttaatt..hh>>

       mmooddee__tt uummaasskk((mmooddee__tt _m_a_s_k));;

DDEESSCCRRIIPPTTIIOONN
       uummaasskk()  sets  the  calling  process's file mode creation mask (umask) to _m_a_s_k & 0777 (i.e., only the file permission bits of
       _m_a_s_k are used), and returns the previous value of the mask.

       The umask is used by ooppeenn(2), mmkkddiirr(2), and other system calls that create files to modify the permissions  placed  on  newly
       created  files  or  directories.  Specifically, permissions in the umask are turned off from the _m_o_d_e argument to ooppeenn(2) and
       mmkkddiirr(2).

       Alternatively, if the parent directory has a default ACL (see aaccll(5)), the umask is ignored, the default  ACL  is  inherited,
       the  permission bits are set based on the inherited ACL, and permission bits absent in the _m_o_d_e argument are turned off.  For
       example, the following default ACL is equivalent to a umask of 022:

           u::rwx,g::r-x,o::r-x

       Combining the effect of this default ACL with a _m_o_d_e argument of 0666 (rw-rw-rw-), the resulting file  permissions  would  be
       0644 (rw-r--r--).

       The constants that should be used to specify _m_a_s_k are described under ssttaatt(2).

       The  typical default value for the process umask is _S___I_W_G_R_P _| _S___I_W_O_T_H (octal 022).  In the usual case where the _m_o_d_e argument
       to ooppeenn(2) is specified as:

           S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH

       (octal 0666) when creating a new file, the permissions on the resulting file will be:

           S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH

       (because 0666 & ~022 = 0644; i.e., rw-r--r--).

RREETTUURRNN VVAALLUUEE
       This system call always succeeds and the previous value of the mask is returned.

CCOONNFFOORRMMIINNGG TTOO
       POSIX.1-2001, POSIX.1-2008, SVr4, 4.3BSD.

NNOOTTEESS
       A child process created via ffoorrkk(2) inherits its parent's umask.  The umask is left unchanged by eexxeeccvvee(2).

       It is impossible to use uummaasskk() to fetch a process's umask without at the same time changing it.  A second  call  to  uummaasskk()
       would  then  be  needed to restore the umask.  The nonatomicity of these two steps provides the potential for races in multi‚Äê
       threaded programs.

       Since Linux 4.7, the umask of any process can be viewed via the _U_m_a_s_k field of _/_p_r_o_c_/_[_p_i_d_]_/_s_t_a_t_u_s.  Inspecting this field  in
       _/_p_r_o_c_/_s_e_l_f_/_s_t_a_t_u_s allows a process to retrieve its umask without at the same time changing it.

       The  umask  setting  also affects the permissions assigned to POSIX IPC objects (mmqq__ooppeenn(3), sseemm__ooppeenn(3), sshhmm__ooppeenn(3)), FIFOs
       (mmkkffiiffoo(3)), and UNIX domain sockets (uunniixx(7)) created by the process.  The umask does not affect the permissions assigned to
       System V IPC objects created by the process (using mmssggggeett(2), sseemmggeett(2), sshhmmggeett(2)).

SSEEEE AALLSSOO
       cchhmmoodd(2), mmkkddiirr(2), ooppeenn(2), ssttaatt(2), aaccll(5)

CCOOLLOOPPHHOONN
       This  page is part of release 4.10 of the Linux _m_a_n_-_p_a_g_e_s project.  A description of the project, information about reporting
       bugs, and the latest version of this page, can be found at https://www.kernel.org/doc/man-pages/.

Linux                                                        2016-07-17                                                     UMASK(2)
