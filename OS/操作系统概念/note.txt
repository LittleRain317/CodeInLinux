============================第一章导论==========================
不同应用领域决定了操作系统不同的特点:eg,关注便捷，关注高效，兼容两者..
从用户角度来看操作系统：不同需求决定了操作系统的不同特点
从操作系统角度来看，属于资源分配器，控制程序

比较公认的定义是：操作系统是一直运行在计算机上面的程序（内核）

移动操作系统通常不只有内核还有中间件（middleware)（为应用程序开发人员提供的软件框架)

CPU和设备控制器可以并发执行，并且竞争内存(RAM)

开机过程:
MBR中存在引导程序（位于计算机固件(ROM或EEPROM))它初始化系统的各个组件，负责定位操作系统内核所在并且加载到内存,系统程序在启动时加载到内存而变成系统进程或系统后台程序（daemon),对于unix，首个系统进程是init,它启动其他后台程序，一旦完成系统就完全启动了

中断:当cpu被中断时，停止目前的事情立马跳转到包含中断程序的起始地址
事件发生通常通过硬件(调用系统总线发送信号到cpu)或软件中断(使用系统调用)来通知。
中断属于计算机体系结构的重要组成，一般是调用一个通用进程来检查中断程序（率先在低地址内存（100之内）保留各个设备的中断处理程序地址)当发生中断时率先将程序地址保留到系统栈里面，中断处理完后，重新加在该地址到PC

经典冯诺依曼体系，取指令（从内存取走指令保存到指令寄存器），翻译指令（解码），执行指令

操作系统为每个设备控制器(操作硬件,当设备控制器完成操作后产生中断来告知驱动程序完成了该操作)提供一个驱动程序（但是该程序一般由硬件厂商完成），该驱动程序负责为操作系统的其他部分提供统一的设备访问接口


---------------------------------计算机系统的体系结构（本书按照通用处理器的数量)-----------------------
单处理器系统:只有一个通用处理器，但是每个设备可能内部集成了一个专用处理器（当通用处理器发生请求时响应请求,执行完成传回数据给cpu)

多处理器系统(多个cpu或多核cpu)：增加吞吐量，经济（对于多个单处理器系统），增加容错性（一个坏了其他继续）
	------------非对称处理(主从关系，一个主处理器，其他是附属处理器）
	------------对称多处理（没有主从关系，共享内存)

---------------------------------计算机系统结构---------------------
1.多道程序设计:
	这些job首先保存在job pool（包括硬盘上的，等待分配内存的所有进程，内存的job pool为整个的一个子集)，当一个job需要等待的时候，cpu切换到下一个job，直到等待完成重新获取cpu
	-----------------
	|	操作系统	|
	-----------------
	|   job1		|
	-----------------
	|   job2 		|
	-----------------
分时系统在多道程序设计上增加了时间片，超时就切换为下一个job


--------------------------------双重模式和多重模式的执行-------------------------
至少需要两种单独运行的模式：用户模式 系统模式,发生中断时硬件的模式位由用户模式变成系统模式

支持虚拟化的cpu会有一个单独模式用于表示虚拟机管理器VMM是否正在控制系统（特权多于用户模式少于系统模式,因为需要改变cpu状态,一般创建虚拟机)

MS-DOS由于没有硬件的模式位支持导致无法构建两种运行模式，因此存在安全隐患，而现代操作系统和硬件提供了多种模式切换

------------定时器（用于强行中断应用程序返回给操作系统来决定是否继续该应用程序)----------------

CPU 寄存器 高速缓存 内存 外存《==数据传输

===========================================第二章:操作系统结构=======================


